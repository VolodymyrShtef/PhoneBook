{"version":3,"sources":["components/phonebook/ContactsList.js","components/phonebook/ShowFav.js","components/phonebook/AddContactForm.js","components/phonebook/firebase.js","components/phonebook/ListHaeader.js","components/App.js","index.js","components/phonebook/phonebook.module.css"],"names":["ContactsList","contacts","onDeleteItem","onEditContact","onAddToFavToggle","onDisplayFav","markup","map","contact","TableItem","key","uuidv4","item","Name","Phone","Email","favourite","className","styles","fav_inverted_button","managing_button","type","onClick","id","newcontact_showfav_button","transaction_history","ShowFav","onDisplayAll","show_all_button","AddContactForm","state","name","tel","email","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addOrEdit","onAddContact","alert","this","contactProps","editID","onBackward","onSubmit","input_field","onChange","add_edit_button","Component","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","ListHeader","fav","onHandleNewContact","App","isSignedIn","currentShowing","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","resetToList","showContacts","allContacts","collection","get","then","querySnapshot","forEach","doc","push","data","displayFavourite","filterFavs","filter","handleNewContact","addContact","find","addToFavToggle","idFavToggle","updatedContacts","handleEditContact","getPropsOfEditingContact","editContact","idUpdate","deleteItem","idDelete","currentUser","displayName","delete","console","log","catch","error","onAuthStateChanged","user","prevProps","prevState","length","set","merge","all_wrapper","signOut","container","firebaseAuth","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1314ca3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./phonebook.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function ContactsList({\r\n  contacts,\r\n  onDeleteItem,\r\n  onEditContact,\r\n  onAddToFavToggle,\r\n  onDisplayFav,\r\n}) {\r\n  const markup = contacts.map((contact) => (\r\n    <TableItem\r\n      key={uuidv4()}\r\n      item={contact}\r\n      onDeleteItem={onDeleteItem}\r\n      onEditContact={onEditContact}\r\n      onAddToFavToggle={onAddToFavToggle}\r\n    />\r\n  ));\r\n\r\n  function TableItem({ item, onDeleteItem, onEditContact, onAddToFavToggle }) {\r\n    const { Name, Phone, Email, favourite } = item;\r\n    return (\r\n      <tr>\r\n        <td>{Name}</td>\r\n        <td>{Phone}</td>\r\n        <td>{Email}</td>\r\n        <td>\r\n          <button\r\n            className={\r\n              favourite ? styles.fav_inverted_button : styles.managing_button\r\n            }\r\n            type=\"button\"\r\n            onClick={onAddToFavToggle}\r\n            id={item.id}\r\n          >\r\n            {favourite ? \"З обраних\" : \"В обрані\"}\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <button\r\n            className={styles.managing_button}\r\n            type=\"button\"\r\n            onClick={onEditContact}\r\n            id={item.id}\r\n          >\r\n            Редагувати\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <button\r\n            className={styles.managing_button}\r\n            type=\"button\"\r\n            onClick={onDeleteItem}\r\n            id={item.id}\r\n          >\r\n            Видалити\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={styles.newcontact_showfav_button}\r\n        type=\"button\"\r\n        onClick={onDisplayFav}\r\n      >\r\n        Показати обрані контакти\r\n      </button>\r\n\r\n      <table className={styles.transaction_history}>\r\n        <thead>\r\n          <tr>\r\n            <th>Ім'я</th>\r\n            <th>Номер телефону</th>\r\n            <th>Ел. пошта</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{markup}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./phonebook.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function ShowFav({ contacts, onDisplayAll }) {\r\n  const markup = contacts.map((contact) => (\r\n    <TableItem key={uuidv4()} item={contact} />\r\n  ));\r\n\r\n  function TableItem({ item }) {\r\n    const { Name, Phone, Email } = item;\r\n    return (\r\n      <tr>\r\n        <td>{Name}</td>\r\n        <td>{Phone}</td>\r\n        <td>{Email}</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={styles.show_all_button}\r\n        type=\"button\"\r\n        onClick={onDisplayAll}\r\n      >\r\n        Показати всі контакти\r\n      </button>\r\n\r\n      <table className={styles.transaction_history}>\r\n        <thead>\r\n          <tr>\r\n            <th>Ім'я</th>\r\n            <th>Номер телефону</th>\r\n            <th>Ел. пошта</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{markup}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./phonebook.module.css\";\r\n\r\nexport default class AddContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    tel: \"\",\r\n    email: \"\",\r\n  };\r\n  componentDidMount() {\r\n    const { name, tel, email } = this.props.contactProps;\r\n    if (this.props.editID)\r\n      this.setState({\r\n        name: name,\r\n        tel: tel,\r\n        email: email,\r\n      });\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.name && this.state.tel) {\r\n      if (this.props.addOrEdit === \"add\") this.props.onAddContact(this.state);\r\n      else this.props.onEditContact(this.state);\r\n    } else alert(\"Заповніть поля із *\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <button\r\n          className={styles.managing_button}\r\n          type=\"button\"\r\n          onClick={this.props.onBackward}\r\n        >\r\n          Назад\r\n        </button>\r\n        {this.props.addOrEdit === \"add\" ? (\r\n          <h2>Новий контакт</h2>\r\n        ) : (\r\n          <h2>Редагувати контакт</h2>\r\n        )}\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Ім'я *{\" \"}\r\n            <input\r\n              className={styles.input_field}\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Номер телефону *{\" \"}\r\n            <input\r\n              className={styles.input_field}\r\n              type=\"tel\"\r\n              value={this.state.tel}\r\n              onChange={this.handleChange}\r\n              name=\"tel\"\r\n              // pattern=\"[0-9]{5}\"\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Електронна пошта{\" \"}\r\n            <input\r\n              className={styles.input_field}\r\n              type=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              name=\"email\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <button className={styles.add_edit_button} type=\"submit\">\r\n            {this.props.addOrEdit === \"add\"\r\n              ? \"Додати в контакти\"\r\n              : \"Редагувати контакт\"}\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAPczfl0I4ymXkw8GaQ99EEXH3Ecx3r0JU\",\r\n  authDomain: \"advphonebook.firebaseapp.com\",\r\n  projectId: \"advphonebook\",\r\n  storageBucket: \"gs://advphonebook.appspot.com\",\r\n  messagingSenderId: \"414776138808\",\r\n  appId: \"1:414776138808:web:13d7caa8a323762af35acd\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nconst contacts = firebase.firestore();\r\nexport default contacts;\r\n","import React from \"react\";\r\nimport styles from \"./phonebook.module.css\";\r\nexport default function ListHeader({ fav, onHandleNewContact }) {\r\n  return (\r\n    <>\r\n      {fav === \"fav\" ? <h2>Вибрані контакти</h2> : <h2>Список контактів</h2>}\r\n      <button\r\n        className={styles.newcontact_showfav_button}\r\n        type=\"button\"\r\n        onClick={onHandleNewContact}\r\n      >\r\n        Новий контакт\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport ContactsList from \"./phonebook/ContactsList\";\r\nimport ShowFav from \"./phonebook/ShowFav\";\r\nimport AddContactForm from \"./phonebook/AddContactForm\";\r\nimport styles from \"./phonebook/phonebook.module.css\";\r\nimport contacts from \"./phonebook/firebase\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport \"firebase/firestore\";\r\nimport ListHeader from \"./phonebook/ListHaeader\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    isSignedIn: false,\r\n    currentShowing: \"list\",\r\n    editID: \"\",\r\n  };\r\n\r\n  uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n    callbacks: {\r\n      signInSuccessWithAuthResult: () => false,\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      this.setState({ isSignedIn: !!user });\r\n      if (this.state.isSignedIn) {\r\n        this.showContacts(firebase.auth().currentUser.displayName);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts === this.state.contacts) return;\r\n    if (prevState.contacts.length > this.state.contacts.length) return;\r\n    this.state.contacts.forEach((contact) => {\r\n      contacts\r\n        .collection(firebase.auth().currentUser.displayName)\r\n        .doc(contact.id)\r\n        .set(\r\n          {\r\n            id: contact.id,\r\n            Name: contact.Name,\r\n            Phone: contact.Phone,\r\n            Email: contact.Email,\r\n            favourite: contact.favourite,\r\n          },\r\n          { merge: true }\r\n        )\r\n        .then(function () {\r\n          console.log(\"Stored in DB\");\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error adding \", error);\r\n        });\r\n    });\r\n  }\r\n\r\n  resetToList = () => {\r\n    this.setState({ currentShowing: \"list\", editID: \"\" });\r\n  };\r\n\r\n  showContacts = (name) => {\r\n    let allContacts = [];\r\n    contacts\r\n      .collection(name)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          allContacts.push(doc.data());\r\n        });\r\n        this.setState({ contacts: allContacts });\r\n      });\r\n  };\r\n\r\n  displayFavourite = () => {\r\n    this.setState({ currentShowing: \"fav\" });\r\n  };\r\n\r\n  filterFavs = () => {\r\n    const favContacts = this.state.contacts.filter(\r\n      (contact) => contact.favourite\r\n    );\r\n    return favContacts;\r\n  };\r\n\r\n  handleNewContact = () => {\r\n    this.setState({ currentShowing: \"add\" });\r\n  };\r\n\r\n  addContact = ({ name, tel, email }) => {\r\n    if (this.state.contacts.find((contact) => contact.Phone === tel)) {\r\n      alert(\"Контакт з таким номером телефону уже існує\");\r\n      return;\r\n    }\r\n    this.setState({\r\n      contacts: [\r\n        ...this.state.contacts,\r\n        {\r\n          id: uuidv4(),\r\n          Name: name,\r\n          Phone: tel,\r\n          Email: email,\r\n          favourite: false,\r\n        },\r\n      ],\r\n    });\r\n    this.resetToList();\r\n  };\r\n\r\n  addToFavToggle = (e) => {\r\n    const idFavToggle = e.target.id;\r\n    const updatedContacts = this.state.contacts.map((contact) =>\r\n      contact.id === idFavToggle\r\n        ? {\r\n            ...contact,\r\n            favourite: !contact.favourite,\r\n          }\r\n        : { ...contact }\r\n    );\r\n    this.setState({ contacts: updatedContacts });\r\n  };\r\n\r\n  handleEditContact = (e) => {\r\n    this.setState({ currentShowing: \"edit\", editID: e.target.id });\r\n  };\r\n\r\n  getPropsOfEditingContact = () => {\r\n    let props = {};\r\n    this.state.contacts.forEach((contact) => {\r\n      if (contact.id === this.state.editID) {\r\n        props = {\r\n          name: contact.Name,\r\n          tel: contact.Phone,\r\n          email: contact.Email,\r\n        };\r\n      }\r\n    });\r\n    return props;\r\n  };\r\n\r\n  editContact = ({ name, tel, email }) => {\r\n    const idUpdate = this.state.editID;\r\n    if (\r\n      this.state.contacts.find(\r\n        (contact) => contact.Phone === tel && contact.id !== idUpdate\r\n      )\r\n    ) {\r\n      alert(\"Контакт з таким номером телефону уже існує\");\r\n      return;\r\n    }\r\n    const updatedContacts = this.state.contacts.map((contact) =>\r\n      contact.id === idUpdate\r\n        ? {\r\n            Name: name,\r\n            Phone: tel,\r\n            Email: email,\r\n            id: contact.id,\r\n            favourite: contact.favourite,\r\n          }\r\n        : { ...contact }\r\n    );\r\n    this.setState({\r\n      contacts: updatedContacts,\r\n      editID: \"\",\r\n    });\r\n    this.resetToList();\r\n  };\r\n\r\n  deleteItem = (e) => {\r\n    const idDelete = e.target.id;\r\n    const updatedContacts = this.state.contacts.filter(\r\n      (contact) => contact.id !== idDelete\r\n    );\r\n    this.setState({ contacts: updatedContacts });\r\n\r\n    contacts\r\n      .collection(firebase.auth().currentUser.displayName)\r\n      .doc(idDelete)\r\n      .delete()\r\n      .then(function () {\r\n        console.log(\"Document successfully deleted!\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { isSignedIn, currentShowing, contacts } = this.state;\r\n    return (\r\n      <div className={styles.all_wrapper}>\r\n        {!isSignedIn ? (\r\n          <StyledFirebaseAuth\r\n            uiConfig={this.uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        ) : (\r\n          <>\r\n            <h2>Ви ввійшли як: {firebase.auth().currentUser.displayName}</h2>\r\n            <button\r\n              className={styles.managing_button}\r\n              onClick={() => firebase.auth().signOut()}\r\n            >\r\n              Sign out!\r\n            </button>\r\n\r\n            {(currentShowing === \"list\" || currentShowing === \"fav\") && (\r\n              <div className={styles.container}>\r\n                <ListHeader\r\n                  fav={this.state.currentShowing}\r\n                  onHandleNewContact={this.handleNewContact}\r\n                />\r\n\r\n                {contacts.length > 0 && (\r\n                  <>\r\n                    {currentShowing === \"list\" && (\r\n                      <ContactsList\r\n                        contacts={contacts}\r\n                        onDisplayFav={this.displayFavourite}\r\n                        onAddToFavToggle={this.addToFavToggle}\r\n                        onEditContact={this.handleEditContact}\r\n                        onDeleteItem={this.deleteItem}\r\n                      />\r\n                    )}\r\n                    {currentShowing === \"fav\" && (\r\n                      <ShowFav\r\n                        contacts={this.filterFavs()}\r\n                        onDisplayAll={this.resetToList}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {(currentShowing === \"add\" || currentShowing === \"edit\") && (\r\n              <div className={styles.container}>\r\n                <AddContactForm\r\n                  onBackward={this.resetToList}\r\n                  onAddContact={this.addContact}\r\n                  onEditContact={this.editContact}\r\n                  addOrEdit={this.state.currentShowing}\r\n                  editID={this.state.editID}\r\n                  contactProps={this.getPropsOfEditingContact()}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all_wrapper\":\"phonebook_all_wrapper__fcOTw\",\"container\":\"phonebook_container__38fkm\",\"input_field\":\"phonebook_input_field__noXA8\",\"newcontact_showfav_button\":\"phonebook_newcontact_showfav_button__fQcv9\",\"show_all_button\":\"phonebook_show_all_button__1XJXw phonebook_newcontact_showfav_button__fQcv9\",\"add_edit_button\":\"phonebook_add_edit_button__IvI-J phonebook_newcontact_showfav_button__fQcv9\",\"managing_button\":\"phonebook_managing_button__3KzFo\",\"fav_inverted_button\":\"phonebook_fav_inverted_button__1rWqd phonebook_managing_button__3KzFo\",\"transaction_history\":\"phonebook_transaction_history__120OG\"};"],"sourceRoot":""}